{"version":3,"sources":["login/models/login-store.ts","util/api.ts","workspace/models/workspace-store.ts","workspace/components/WorkspaceTabularVIew.tsx","workspace/components/WorkspaceGridView.tsx","workspace/components/addWorkspaceModal.tsx","dashboard/components/Dashboard.tsx","login/components/Login.tsx","Navbar/components/Navbar.tsx","register/models/register-store.ts","register/components/Register.tsx","sideBar/components/Sidebar.tsx","RegionApp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useLoginStore","create","set","currentRegion","jwtToken","userData","email","String","firstName","lastName","login","password","a","apiRequest","url","method","data","skipAuthHeader","response","userDetails","region","getRegionFromUrl","localStorage","setItem","JSON","stringify","loadLogin","getItem","parse","error","console","logout","removeItem","window","location","href","pathname","secondSlash","indexOf","firstParam","substring","undefined","tcasEnv","defaultRegion","config","options","loginState","getState","reload","Error","apiUrl","apiUrlMap","baseURL","token","headers","Authorization","axios","request","message","toast","useWorkspaceStore","workspacelist","createWorkspace","workspaceName","status","success","getWorkspaces","WorkspaceTabularView","workspaceList","state","row","className","length","map","title","key","scope","workspaceListItem","Number","name","WorkspaceGridView","src","alt","AddWorkspaceModal","props","useState","workSpaceName","setWorkspaceName","role","id","onChange","event","target","value","placeholder","type","onClick","setModelOpen","Dashboard","isGridView","setGidView","modelOpen","createWorkspaceStoremethod","useEffect","Login","setEmail","setPassword","submitLogin","required","Sidebar","useRegisterStore","Register","RoundedBR","xmlns","viewBox","fill","d","RoundedTR","SidebarItem","useLocation","resolvedPath","useResolvedPath","linkTo","to","isCollapsed","label","icon","setIsCollapsed","style","position","top","overflowY","ViewGridIcon","QrcodeIcon","DatabaseIcon","HomeIcon","DocumentDuplicateIcon","UserGroupIcon","AdjustmentsIcon","Landing","RegionApp","params","useParams","loginStateRegion","isLoggedIn","Navbar","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnFocusLoss","draggable","pauseOnHover","document","getElementById"],"mappings":"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","file":"static/js/main.cd406fbc.chunk.js","sourcesContent":["import create from \"zustand\";\nimport { apiRequest, getRegionFromUrl } from \"../../util/api\";\n\nexport const useLoginStore = create(set => ({\n  currentRegion: null,\n  jwtToken: null,\n  userData: {\n    email: String,\n    firstName: String,\n    lastName: String\n  },\n  login: async (email: string, password: string) => {\n    const response = await apiRequest({\n      url: '/api/user/v1/authenticate',\n      method: 'POST',\n      data: {\n        \"username\": email,\n        \"password\": password\n      }\n    }, { skipAuthHeader: true });\n    let jwtToken = response.data.jwtToken;\n    let userData = response.data.userDetails;\n    const region = getRegionFromUrl();\n    set({ jwtToken,userData });\n    localStorage.setItem(`jwtToken_${region}`, jwtToken);\n    localStorage.setItem(`userData_${region}`, JSON.stringify(userData));\n  },\n  loadLogin: () => {\n    const region = getRegionFromUrl();\n    const jwtToken = localStorage.getItem(`jwtToken_${region}`);\n    let userData = null;\n    try {\n      userData = JSON.parse(localStorage.getItem(`userData_${region}`) ?? 'null');\n    } catch (error) {\n      console.error('Error parsing user data from local storage');\n    }\n    set({ jwtToken, currentRegion: region, userData });\n  },\n  logout: () => {\n    const region = getRegionFromUrl();\n    localStorage.removeItem(`jwtToken_${region}`);\n    localStorage.removeItem(`userData_${region}`);\n    set({ jwtToken: null,userData :null });\n    // TODO navigate to `/${urlPathFirstParam}/app`\n    window.location.href = `/${region}/app`;\n  }\n}));\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useLoginStore } from \"../login/models/login-store\";\n\nexport interface TcasEnv {\n  defaultRegion: string;\n  apiUrlMap: {\n    [key: string]: string\n  };\n}\n\ndeclare var tcasEnv: TcasEnv;\n\nexport function getRegionFromUrl() {\n  const pathname = window.location.pathname;\n  const secondSlash = pathname.indexOf('/', 1);\n  const firstParam = pathname.substring(1, secondSlash !== -1 ? secondSlash : undefined);\n  return firstParam === '_' || firstParam === '' ? tcasEnv.defaultRegion : firstParam;\n}\n\nexport async function apiRequest(config: AxiosRequestConfig, options: {skipAuthHeader?: boolean} = {}) {\n  const region = getRegionFromUrl();\n  const loginState = useLoginStore.getState();\n  if (loginState.currentRegion !== region) {\n    window.location.reload();\n    throw new Error(\"Region from url and that in state don't match\");\n  }\n  const apiUrl = tcasEnv.apiUrlMap[region];\n  config.baseURL = apiUrl;\n\n  if (!options.skipAuthHeader) {\n    const token = loginState.jwtToken;\n    if (!config.headers) {\n      config.headers = {}\n    }\n    config.headers.Authorization = `Bearer ${token}`\n  }\n  \n  try {\n    return await axios.request(config);\n  } catch (error: any) {\n    const message = error.response?.data?.message ?? error.message;\n    toast.error(message);\n    throw error;\n  }\n}\n","import { toast } from \"react-toastify\";\nimport create from \"zustand\";\nimport { apiRequest } from \"../../util/api\";\n\nexport const useWorkspaceStore = create(set => ({\n  workspacelist: [],\n  createWorkspace: async (workspaceName:String) => {\n   const response = await apiRequest({\n      url: '/api/consumer/v1/workspaces',\n      method: 'POST',\n      data: {\n        \"name\": workspaceName\n      }\n    });\n    if(response.status ===200){\n      toast.success(\"Workspace added successfully\"); \n    }\n  },\n  getWorkspaces: async () => {\n    const response = await apiRequest({\n      url: '/api/consumer/v1/workspaces',\n      method: 'GET',\n    });\n    let workspacelist= response.data;\n    set({workspacelist});\n  }\n}));\n","import { Key } from \"react\";\nimport { useWorkspaceStore } from \"../models/workspace-store\";\nimport { ArrowCircleDownIcon, SearchIcon } from \"@heroicons/react/outline\";\nfunction WorkspaceTabularView() {\n  const workspaceList = useWorkspaceStore((state) => state.workspacelist);\n  const row = {\n    workspaceName: \"Import UK\",\n    role: \"Wrokspace Owner\",\n    membersCount: 3,\n    servicesCount: 6,\n    category: \"Customs Filing\",\n    serviceName: \"Service Name\",\n    details: \"2 Filings submitted\",\n    status: true,\n  };\n  const headers = [\n    \"Workspace Name\",\n    \"Members\",\n    \"Services\",\n    \"Category\",\n    \"Service Name\",\n    \"Details\",\n  ];\n  return (\n    <div className=\"w-full bg-white py-2 px-6 rounded-lg\">\n      <div className=\"flex flex-row h-10 my-3 items-center\">\n        <div>\n          <p className=\"text-black text-lg font-medium\">\n            Workspace ({workspaceList.length})\n          </p>\n        </div>\n        <div className=\"flex flex-row flex-grow justify-end\">\n          <SearchIcon className=\"h-10 py-2 mx-4\"></SearchIcon>\n          <ArrowCircleDownIcon className=\"h-10 py-2\"></ArrowCircleDownIcon>\n        </div>\n      </div>\n      <table className=\"min-w-full divide-y divide-gray-200 border-4 border-gray-100 rounded-sm\">\n        <thead className=\"bg-gray-100\">\n          <tr>\n            {headers.map((title, key) => {\n              return (\n                <th\n                  key={key}\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-centre text-xs font-bold uppercase tracking-wider\"\n                >\n                  <div className=\"flex flex-row\">\n                    <p>{title}</p>\n                    {/* <FilterIcon className=\"h-4 px-1\"></FilterIcon> */}\n                  </div>\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n        <tbody className=\"bg-white divide-y divide-gray-200\">\n          {workspaceList &&\n            workspaceList.map(\n              (\n                workspaceListItem: { name: String },\n                key: Key | null | undefined\n              ) => (\n                <tr\n                  className={\n                    (Number(key) + 1) % 2 == 0\n                      ? \"h-10 bg-gray-100 mx-2\"\n                      : \"h-10 bg-white mx-2\"\n                  }\n                >\n                  <td\n                    className=\"px-6 py-4 whitespace-nowrap text-sm text-center\"\n                    key={key}\n                  >\n                    <div className=\"flex items-center\">\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium\">\n                          {workspaceListItem.name}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">{row.role}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-6 py-4 whitespace-nowrap text-sm text-center font-medium\"\n                    key={key}\n                  >\n                    {row.membersCount}\n                  </td>\n                  <td\n                    className=\"px-6 py-4 whitespace-nowrap text-sm text-center font-medium\"\n                    key={key}\n                  >\n                    {row.servicesCount}\n                  </td>\n                  <td\n                    className=\"px-6 py-4 whitespace-nowrap text-sm text-center font-medium\"\n                    key={key}\n                  >\n                    {row.category}\n                  </td>\n                  <td\n                    className=\"px-6 py-4 whitespace-nowrap text-sm text-center font-medium\"\n                    key={key}\n                  >\n                    {row.serviceName}\n                  </td>\n                  <td\n                    className=\"px-6 py-4 whitespace-nowrap text-sm text-center font-medium\"\n                    key={key}\n                  >\n                    {row.details}\n                  </td>\n                  {/* <td\n                    className=\"px-6 py-4 whitespace-nowrap text-sm text-center font-medium\"\n                    key={key}\n                  >\n                    <span\n                      className={\n                        row.status\n                          ? \"px-2 inline-flex text-xs leading-5 font-semibold bg-green-100 text-green-800\"\n                          : \"px-2 inline-flex text-xs leading-5 font-semibold bg-red-100 text-red-800\"\n                      }\n                      // className={\n                      //   \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100\" +\n                      //   (row.status ? \"text-green-800\" : \"bg-red-100 text-red-800\")\n                      // }\n                    >\n                      {row.status ? \"Active\" : \"Expired\"}\n                    </span>\n                  </td> */}\n                </tr>\n              )\n            )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default WorkspaceTabularView;\n","import { Key } from \"react\";\nimport { useWorkspaceStore } from \"../models/workspace-store\";\n\nfunction WorkspaceGridView() {\n  const workspaceList = useWorkspaceStore((state) => state.workspacelist);\n  return (\n\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n      {workspaceList &&\n        workspaceList.map(\n          (\n            workspaceListItem: { name: String },\n            key: Key | null | undefined\n          ) => (\n            <div className=\"w-full  mt-2 bg-white rounded-md border\">\n              <div className=\"flex w-full border-b \">\n                <div className=\"mt-3 ml-3 mb-3\">\n                  <img\n                    src=\"https://mdbootstrap.com/img/new/standard/city/035.jpg\"\n                    alt=\"...\"\n                    className=\"rounded h-10 w-10 align-middle border-none\"\n                  />\n                </div>\n                <div className=\"w-3/5 ml-2 mt-3 text-sm font-medium\">\n                  {workspaceListItem.name}\n\n                  <br />\n                  <p className=\"text-xs text-gray-500\">Role</p>\n                </div>\n                <div className=\"w-4/12\">\n                  <div className=\"mt-4\">\n                    <img\n                      className=\"absolute h-8 w-8 border border-white rounded-full\"\n                      src=\"https://mdbootstrap.com/img/new/standard/city/031.jpg\"\n                      alt=\"...\"\n                    // className=\"rounded max-w-full h-auto align-middle border-none\"\n                    />\n                    <img\n                      className=\"absolute h-8 w-8 border border-white rounded-full ml-4\"\n                      src=\"https://mdbootstrap.com/img/new/standard/city/037.jpg\"\n                      alt=\"...\"\n                    // className=\"rounded max-w-full h-auto align-middle border-none\"\n                    />\n                    <div\n                      className=\"absolute h-8 w-8 border bg-gray-200 border-white rounded-full ml-8\"\n                    // className=\"rounded max-w-full h-auto align-middle border-none\"\n                    />\n                    <div className=\"absolute text-xs text-purple-800 font-medium mt-2 ml-10\">\n                      +3\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"ml-3 mt-2 text-sm text-gray-500 font-medium\">\n                <p className=\"\">Services (6)</p>\n              </div>\n              <div className=\"col-start-1 col-span-3 ml-3 mt-2\">\n                <p className=\"text-sm\">\n                  Watchlist Screening\n                </p>\n                <div className=\"flex items-center flex w-full\">\n                  <div className=\" w-1/6 text-inline\">\n                    <p className=\"text-xs\"> <b className=\"text-base\">9</b>/14</p>\n                  </div>\n                  <div className=\"overflow-hidden w-10/12 h-2 mr-3 text-xs flex rounded bg-purple-200\">\n                    <div\n                      className=\"w-1/2\n        shadow-none\n        flex flex-col\n        text-right\n        whitespace-nowrap\n        text-white\n        justify-center\n        bg-purple-900\n      \"\n                    ></div>\n                  </div>\n                </div>\n              </div><div className=\"col-start-1 col-span-3 ml-3 mt-2\">\n                <p className=\"text-sm\">\n                  Custom Filing\n                </p>\n                <div className=\"flex items-center flex w-full\">\n                  <div className=\" w-1/6 text-inline\">\n                    <p className=\"text-xs\"> <b className=\"text-base\">8</b>/14</p>\n                  </div>\n                  <div className=\"overflow-hidden w-10/12 h-2 mr-3 text-xs flex rounded bg-purple-200\">\n                    <div\n                      className=\"w-10/12\n        shadow-none\n        flex flex-col\n        text-right\n        whitespace-nowrap\n        text-white\n        justify-center\n        bg-purple-900\n      \"\n                    ></div>\n                  </div>\n                </div>\n              </div><div className=\"col-start-1 col-span-3 ml-3 mt-2\">\n                <p className=\"text-sm\">\n                  Watchlist Screening\n                </p>\n                <div className=\"flex items-center flex w-full\">\n                  <div className=\" w-1/6  text-inline\">\n                    <p className=\"text-xs\"> <b className=\"text-base\">9</b>/14</p>\n                  </div>\n                  <div className=\"overflow-hidden w-10/12 h-2 mr-3 text-xs flex rounded bg-purple-200\">\n                    <div\n                      className=\"w-4/12\n        shadow-none\n        flex flex-col\n        text-right\n        whitespace-nowrap\n        text-white\n        justify-center\n        bg-purple-900\n      \"\n                    ></div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex w-full mt-2 mb-3\">\n                <div className=\"item-inline w-3/5 ml-3 item-left text-sm text-gray-500 item-font-medium \">\n                  <button className=\"text-xs py-2 text-purple-800 font-medium\">\n                    View All\n                  </button>\n                </div>\n                <div className=\"w-2/5 mr-3\">\n                  <button className=\"hover:bg-purple-900 float-right hover:text-white border-1 border border-purple-800 text-purple-900 font-medium px-4   py-0.5 rounded-full\">\n                    Open\n                  </button>\n                </div>\n              </div>\n            </div>\n          )\n        )}\n    </div>\n  );\n}\nexport default WorkspaceGridView;\n","import { useState } from \"react\";\n\nconst AddWorkspaceModal = (props: any) => {\n  const [workSpaceName, setWorkspaceName] = useState(\"\");\n  const changeData = (event: any) => {\n    setWorkspaceName(event.target.value);\n  };\n  return (\n    <div\n      className=\"fixed z-10 inset-0 overflow-y-auto\"\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span\n          className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n          aria-hidden=\"true\"\n        >\n          &#8203;\n        </span>\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n          <div className=\"py-4 px-6\">\n            <div className=\"text-left border-b border-gray-100\">\n              <h3\n                className=\"text-lg leading-6 font-medium pb-4\"\n                id=\"modal-title\"\n              >\n                Add Workspace\n              </h3>\n            </div>\n            <div className=\"pt-4 pb-2 \">\n              <p className=\"text-gray-500 text-sm\">Workspace Name</p>\n            </div>\n            <div className=\"mb-6\">\n              <input\n                onChange={changeData}\n                className=\"w-full h-8 p-2 border border-gray-200 placeholder-gray-200\"\n                placeholder=\"Enter workspace name\"\n                type=\"text\"\n              ></input>\n            </div>\n            <div className=\"flex flex-row-reverse my-2\">\n              <button\n                onClick={() => props.setModelOpen(false)}\n                className=\"border border-purple-900 text-purple-900 h-8 rounded-3xl px-4 m-1\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => props.createWorkspace(workSpaceName)}\n                className=\"bg-purple-900 text-white rounded-3xl px-6 m-1\"\n              >\n                Create\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default AddWorkspaceModal;\n","// import { Link } from \"react-router-dom\";\nimport WorkspaceTabularView from \"../../workspace/components/WorkspaceTabularVIew\";\nimport WorkSpaceGridView from \"../../workspace/components/WorkspaceGridView\";\nimport AddWorkspaceModal from \"../../workspace/components/addWorkspaceModal\";\nimport {\n  ViewGridIcon,\n  ViewListIcon,\n  PlusCircleIcon,\n} from \"@heroicons/react/solid\";\nimport { useEffect, useState } from \"react\";\nimport { useWorkspaceStore } from \"../../workspace/models/workspace-store\";\nimport { useLoginStore } from \"../../login/models/login-store\";\n// import { PlusCircleIcon } from \"@heroicons/react/solid\";\nfunction Dashboard() {\n  const [isGridView, setGidView] = useState(true);\n  const [modelOpen, setModelOpen] = useState(false);\n  const createWorkspaceStoremethod = useWorkspaceStore(\n    (state) => state.createWorkspace\n  );\n  const getWorkspaces = useWorkspaceStore((state) => state.getWorkspaces);\n  const userData = useLoginStore((state) => state.userData);\n  const createWorkspace = async (workspaceName: string) => {\n    await createWorkspaceStoremethod(workspaceName);\n    setModelOpen(false);\n    await getWorkspaces();\n  };\n  useEffect(() => {\n    getWorkspaces();\n  }, []);\n  return (\n    <div className=\"flex-grow bg-gray-100 pb-10\">\n      <div className=\"ml-4  mr-6 \">\n        <div className=\"flex flex-row w-full my-4\">\n          <div className=\"flex flex-row items-center\">\n            <p className=\"text-purple-900 text-lg font-medium\">\n              Welcome {userData?.firstName}!\n            </p>\n          </div>\n          <div className=\"mx-4\">\n            <PlusCircleIcon\n              className=\"w-10 h-10 stroke-current text-purple-900 cursor-pointer\"\n              onClick={() => {\n                setModelOpen(true);\n              }}\n            ></PlusCircleIcon>\n          </div>\n          <div className=\"flex flex-row flex-grow items-center justify-end cursor-pointer\">\n            <div className=\"flex flex-row bg-white border rounded-full\">\n              <ViewGridIcon\n                onClick={() => {\n                  setGidView(true);\n                }}\n                className={\n                  isGridView\n                    ? \"h-8 w-8 bg-purple-900 text-white p-2 rounded-full\"\n                    : \"h-8 w-8 bg-white text-purple-900 p-2 rounded-full\"\n                }\n              ></ViewGridIcon>\n              <ViewListIcon\n                onClick={() => {\n                  setGidView(false);\n                }}\n                className={\n                  !isGridView\n                    ? \"h-8 w-8 bg-purple-900 text-white p-2 rounded-full\"\n                    : \"h-8 w-8 bg-white text-purple-900 p-2 rounded-full\"\n                }\n              ></ViewListIcon>\n            </div>\n          </div>\n        </div>\n\n        {isGridView ? (\n          <div>\n            <WorkSpaceGridView />\n          </div>\n        ) : (\n          <div>\n            <WorkspaceTabularView />\n          </div>\n        )}\n      </div>\n      {modelOpen ? (\n        <AddWorkspaceModal\n          setModelOpen={setModelOpen}\n          createWorkspace={createWorkspace}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import { useLoginStore } from \"../models/login-store\";\nimport { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nfunction Login() {\n  const login = useLoginStore((state) => state.login);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const submitLogin = async () => {\n    await login(email, password);\n  };\n  const onChangeEmail = (event: any) => {\n    setEmail(event.target.value);\n  };\n  const onChangePassword = (event: any) => {\n    setPassword(event.target.value);\n  };\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-10\">\n      <div className=\"min-h-5/6 flex flex-col box-border-gray-200 border-2 w-2/6 mx-auto bg-white rounded-xl\">\n        <div className=\"items-start h-1/12 mx-auto my-4\">\n          <p className=\"text-purple-900 text-sm font-semibold text-center\">\n            Welcome to\n          </p>\n          <p className=\"text-lg text-purple-900 font-bold text-center\">\n            TCAS Portal\n          </p>\n        </div>\n        <hr className=\"min-w-screen solid\"></hr>\n        <div className=\"items-start\">\n          <p className=\"text-black text-lg mt-6 font-bold text-center\">\n            Login to your account\n          </p>\n          <div className=\"px-14 pt-5 pb-20\">\n            <p className=\"mb-1 text-gray-600 text-sm\">Username</p>\n            <div className=\"mb-4\">\n              <input\n                type=\"text\"\n                id=\"email\"\n                onChange={onChangeEmail}\n                className=\"border p-2 w-full h-9 rounded border-gray-200 placeholder-gray-200\"\n                required\n                placeholder=\"Enter username\"\n              ></input>\n            </div>\n            <div>\n              <p className=\"mb-1 text-gray-600 text-sm\">Password</p>\n            </div>\n            <div>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={onChangePassword}\n                className=\"border border-gray-200 p-2 w-full h-9 rounded border-gray-200 placeholder-gray-200\"\n                required\n                placeholder=\"Enter password\"\n              ></input>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-400 text-right pt-1\">\n                Forgot Password?\n              </p>\n            </div>\n            {/* <div className=\"flex flex-row items-start\">\n              <input type=\"checkbox\" className=\"bg-purple-800\" />\n              <p className=\"text-sm text-gray-400\">Remember me</p>\n            </div> */}\n            <div>\n              <button\n                className=\"bg-purple-900 text-white w-full h-9 mt-4 rounded-3xl\"\n                onClick={() => submitLogin()}\n              >\n                Login\n              </button>\n            </div>\n          </div>\n          <hr className=\"min-w-screen solid\"></hr>\n          <div className=\"py-5\">\n            <p className=\"text-black text-sm text-center\">\n              Don't have an account ?\n            </p>\n            <p className=\"text-purple-900 text-lg font-medium text-center place-self-center\">\n              Register\n            </p>\n            {/* <Link\n              to=\"/register\"\n              className=\"text-black text-lg font-medium text-center place-self-center\"\n            >\n              Register\n            </Link> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import {\n  SearchIcon,\n  ShoppingCartIcon,\n  AnnotationIcon,\n  BellIcon,\n} from \"@heroicons/react/outline\";\nconst Sidebar = () => {\n  return (\n    <div className=\"bg-gray-100\">\n      <div className=\"flex items-center h-14 ml-4 rounded-bl-lg bg-white border\">\n        {/* <div className=\"flex flex-row h-6 ml-3 pl-4 rounded-full bg-gray-200\">\n          <input\n            className=\"bg-gray-200 text-gray-700\"\n            id=\"grid-first-name\"\n            type=\"text\"\n            placeholder=\"Search\"\n          ></input>\n          <SearchIcon className=\"flex items-center justify-center h-6 w-10 rounded-full bg-purple-900 text-white p-1\"></SearchIcon>\n        </div> */}\n        <div className=\"flex flex-row w-full items-center justify-end\">\n          <div>\n            <button className=\"h-8 w-28 border-2 text-sm border-purple-900 text-purple-900 font-semibold rounded-full mx-2 float-right\">\n              Add Service\n            </button>\n          </div>\n          <div>\n            <BellIcon className=\"h-8 rounded-full bg-purple-200 p-2 flex items-center justify-center mx-2\"></BellIcon>\n          </div>\n          <div>\n            <ShoppingCartIcon className=\"h-8 rounded-full bg-purple-200 p-2 flex items-center justify-center mx-2\"></ShoppingCartIcon>\n          </div>\n          <div className=\"border-l-2 px-2 text-right\">\n            <p className=\"text-xs text-gray-700\">Credits</p>\n            <p className=\"text-xs  font-bold\">1000</p>\n          </div>\n          <div className=\"flex justify-end\">\n            <button className=\"h-8 w-20 border text-sm bg-purple-900 text-white font-semibold rounded-full mx-2 float-right\">\n              Top Up\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Sidebar;\n","import create from \"zustand\";\n\nexport const useRegisterStore = create(set => ({\n  jwtToken: null,\n  userData: null,\n  login: (jwtToken: string) => {\n    set({ jwtToken });\n    localStorage.setItem(\"jwtToken\", jwtToken);\n  },\n  loadLogin: () => {\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    set({ jwtToken });\n  },\n  logout: () => {\n    set({ jwtToken: null });\n  }\n}));\n","import { useRegisterStore } from \"../models/register-store\";\n\nfunction Register() {\n  const login = useRegisterStore(state => state.login);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-10 \">\n      <div className=\"min-h-5/6 flex flex-col box-border-gray-200 border-2 w-2/5 mx-auto bg-white\" >\n        <div className=\"items-start h-1/12 mx-auto my-4\">\n          <p className=\"text-black text-sm text-center\">\n            Welcome to\n          </p>\n          <p className=\"text-lg text-black font-semibold text-center\">\n            TCAS PORTAL\n          </p>\n        </div>\n        <hr className=\"min-w-screen solid\"></hr>\n        <div className=\"items-start\">\n          <p className=\"text-black text-lg m-4 font-medium text-center\">\n           Create your account\n          </p>\n          <div className =\"px-20 pt-5 pb-20\"><p>Name</p>\n          <div className =\"mb-4\"><input type=\"text\" id=\"name\" className=\"border border-black w-full h-9\"></input></div>\n          <div><p >Email</p></div>\n          <div><input type=\"text\" id=\"email\" className=\"border border-black w-full h-9\"></input></div>\n          <div className =\"flex flex-row items-start self-center pt-2 pb-5\">\n        \n          </div>\n          <div>\n            <p className=\"text-sm text-gray-400 text-center p-1\">Account creation mail will be sent to the above email</p>\n            <button className=\"bg-black text-white w-full h-9\" onClick={() => login('Foo')}>Login</button></div>\n          </div>\n          <hr className=\"min-w-screen solid\"></hr>\n          <div className=\"py-5\">\n          <p className=\"text-black text-sm text-center\">\n           Already have an account ?\n          </p>\n          <p className=\"text-black text-lg font-medium text-center place-self-center\">Login</p>\n          </div>\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Register;\n","import {\n  MenuIcon,\n  HomeIcon,\n  ViewGridIcon,\n  QrcodeIcon,\n  AdjustmentsIcon,\n  UserGroupIcon,\n  DatabaseIcon,\n  DocumentDuplicateIcon,\n} from \"@heroicons/react/solid\";\nimport { useState } from \"react\";\nimport { Link, useLocation, useResolvedPath } from \"react-router-dom\";\nimport { useLoginStore } from \"../../login/models/login-store\";\nfunction RoundedBR(props: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      className={props.className}\n    >\n      <path d=\"m 0,20 20,0 0,-20 c 0,0 0,20 -20,20 z\"></path>\n    </svg>\n  );\n}\n\nfunction RoundedTR(props: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      className={props.className}\n    >\n      <path d=\"M 20,20 V 0 H 0 c 0,0 20,0 20,20 z\"></path>\n    </svg>\n  );\n}\n\nfunction SidebarItem(props: {\n  icon: React.ComponentType<any>;\n  label: string;\n  linkTo: string;\n  isCollapsed?: boolean;\n}) {\n  const location = useLocation();\n  const resolvedPath = useResolvedPath(props.linkTo);\n  const isActive = location.pathname === resolvedPath.pathname;\n\n  return isActive ? (\n    <Link\n      to={props.linkTo}\n      title={props.isCollapsed ? props.label : undefined}\n      className=\"block relative\"\n    >\n      <RoundedBR className=\"absolute bottom-full right-0 h-4 w-4 text-gray-100\" />\n      <div className=\"flex flex-row bg-gray-100 rounded-l-3xl ml-2 items-center\">\n        <props.icon className=\"h-10 w-10 p-2 text-purple-900\" />\n        {props.isCollapsed === false && (\n          <div className=\"text-purple-900 py-2 text-sm\">{props.label}</div>\n        )}\n      </div>\n      <RoundedTR className=\"absolute top-full right-0 h-4 w-4 text-gray-100\" />\n    </Link>\n  ) : (\n    <Link to={props.linkTo} title={props.isCollapsed ? props.label : undefined}>\n      <div className=\"flex flex-row items-center\">\n        <props.icon className=\"h-18 w-10 p-2 ml-2 text-white\" />\n        {props.isCollapsed === false && (\n          <div className=\"text-white py-2 text-sm\">{props.label}</div>\n        )}\n      </div>\n    </Link>\n  );\n}\n\nconst Sidebar = () => {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const echangeSidebarView = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n  const logout = useLoginStore((state) => state.logout);\n  const userData = useLoginStore((state) => state.userData);\n  return (\n    <div\n      className={\n        !isCollapsed\n          ? \"h-screen w-56 hide-scrollbar bg-purple-900 flex flex-col items-start\"\n          : \"h-screen w-16 hide-scrollbar bg-purple-900 flex flex-col items-start items-stretch\"\n      }\n      style={{ position: \"sticky\", top: \"0\", overflowY: \"scroll\" }}\n    >\n      <div className=\"cursor-pointer\">\n        <MenuIcon\n          onClick={echangeSidebarView}\n          className=\"h-10 w-10 p-2 m-2 text-white\"\n        />\n      </div>\n      <div className=\"w-full\">\n        <SidebarItem\n          icon={ViewGridIcon}\n          label=\"Dashboard\"\n          linkTo=\"dashboard\"\n          isCollapsed={isCollapsed}\n        />\n        <SidebarItem\n          icon={QrcodeIcon}\n          label=\"Wallet\"\n          linkTo=\"wallet\"\n          isCollapsed={isCollapsed}\n        />\n        <SidebarItem\n          icon={DatabaseIcon}\n          label=\"Storage\"\n          linkTo=\"storage\"\n          isCollapsed={isCollapsed}\n        />\n        <SidebarItem\n          icon={HomeIcon}\n          label=\"Home\"\n          linkTo=\"home\"\n          isCollapsed={isCollapsed}\n        />\n        <SidebarItem\n          icon={DocumentDuplicateIcon}\n          label=\"Catalog\"\n          linkTo=\"catalog\"\n          isCollapsed={isCollapsed}\n        />\n        <SidebarItem\n          icon={UserGroupIcon}\n          label=\"User\"\n          linkTo=\"user\"\n          isCollapsed={isCollapsed}\n        />\n        <SidebarItem\n          icon={AdjustmentsIcon}\n          label=\"Settings\"\n          linkTo=\"settings\"\n          isCollapsed={isCollapsed}\n        />\n      </div>\n      <div className=\"flex h-full flex-row items-end p-2\">\n        <div className=\"w-10 h-10 \">\n          <img\n            src=\"https://mdbootstrap.com/img/new/avatars/15.jpg\"\n            alt=\"...\"\n            className=\"rounded-full max-w-full h-auto align-middle border-none\"\n          />\n        </div>\n        {!isCollapsed ? (\n          <div className=\"px-2 text-center\">\n            <p className=\"text-sm text-white text-left\">\n              {userData?.firstName} {userData?.lastName}\n            </p>\n            <p\n              className=\"text-xs text-gray-200 cursor-pointer text-left\"\n              onClick={logout}\n            >\n              Logout\n            </p>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\nexport default Sidebar;\n","import { useEffect } from \"react\";\nimport { Route, Routes, useParams } from \"react-router-dom\";\nimport Dashboard from \"./dashboard/components/Dashboard\";\nimport Login from \"./login/components/Login\";\nimport { useLoginStore } from \"./login/models/login-store\";\nimport Navbar from \"./Navbar/components/Navbar\";\nimport Register from \"./register/components/Register\";\nimport Sidebar from \"./sideBar/components/Sidebar\";\nimport { TcasEnv } from \"./util/api\";\n\ndeclare var tcasEnv: TcasEnv;\n\nfunction Landing() {\n  return <div>Hello</div>;\n}\n\nfunction RegionApp() {\n  const params = useParams();\n  const region = params.region === \"_\" ? tcasEnv.defaultRegion : params.region;\n  const loginStateRegion = useLoginStore((state) => state.currentRegion);\n  const isLoggedIn = useLoginStore((state) => state.jwtToken) != null;\n  const loadLogin = useLoginStore((state) => state.loadLogin);\n  // const logout = useLoginStore(state => state.logout);\n\n  useEffect(() => {\n    loadLogin();\n  }, [loadLogin]);\n\n  if (loginStateRegion !== null && region !== loginStateRegion) {\n    window.location.reload();\n    return (\n      <div>\n        Region doesn't match, please refresh the page to view latest content.\n      </div>\n    );\n  }\n\n  if (!isLoggedIn) {\n    return <Login />;\n  }\n  return (\n    <div className=\"flex items-start\">\n      <Sidebar />\n      <div className=\"flex flex-col flex-grow min-h-screen\">\n        <Navbar />\n        <Routes>\n          <Route path={``} element={<Landing />} />\n          <Route path={`register`} element={<Register />} />\n          <Route path={`dashboard`} element={<Dashboard />} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default RegionApp;\n","import { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport RegionApp from \"./RegionApp\";\nimport { TcasEnv } from \"./util/api\";\n\ndeclare var tcasEnv: TcasEnv;\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Navigate to={`/${tcasEnv.defaultRegion}/app`} />} />\n        <Route path=\"/:region\" element={<Navigate to={`app`} />} />\n        <Route path=\"/:region/app/*\" element={<RegionApp />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <App />\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={true}\n        newestOnTop={false}\n        closeOnClick\n        // rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}